[null,{"name":"SetGame","temp":"","event-type":"0","_id":"eajEX","actions":[{"info":"3","storage":"1","varName2":"serwery","name":"Store Bot Client Info"},{"gameName":"13 DZIELNICA","gameLink":"","name":"Set Bot Game"},{"time":"5","measurement":"1","name":"Wait"},{"gameName":"*pomoc","gameLink":"","name":"Set Bot Game"}]},{"name":"reactionStart","temp":"","event-type":"1","_id":"Lwriz","actions":[{"behavior":"3","name":"Run Action Sequence Once"},{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\n\n//Settings\nconst dmUserAfter = true; // Default, can be changed to false\nvar messageSentAdd = 'Successfully added the role {rolename} in {server}';\nvar messageSentRemove = 'Successfully removed the role {rolename} in {server}';\n// The only variables that work rn, {rolename} and {server}\n\n\nif(fs.existsSync('./data/reactionRoleData.json')) {\n    fs.readFile('./data/reactionRoleData.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        data = JSON.parse(data)\n    \n        _this.storeValue(data, 3, 'reactionRoleInf', cache);\n    });\n} else {\n    fs.writeFile(\"./data/reactionRoleData.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n    _this.storeValue({}, 3, 'reactionRoleInf', cache);\n}\n\nclient.on('raw', packet => {\n    if (!['MESSAGE_REACTION_ADD', 'MESSAGE_REACTION_REMOVE'].includes(packet.t)) return;\n    const channel = client.channels.get(packet.d.channel_id);\n    if (channel.messages.has(packet.d.message_id)) return;\n    channel.fetchMessage(packet.d.message_id).then(message => {\n        const emoji = packet.d.emoji.id ? `${packet.d.emoji.name}:${packet.d.emoji.id}` : packet.d.emoji.name;\n        const reaction = message.reactions.get(emoji);\n        const reactionUser = client.users.get(packet.d.user_id);\n        if (reaction) reaction.users.set(packet.d.user_id, reactionUser);\n        if (!reactionUser.bot) {\n            if (packet.t === 'MESSAGE_REACTION_ADD') {\n                client.emit('messageReactionAdd', reaction, reactionUser);\n            }\n            if (packet.t === 'MESSAGE_REACTION_REMOVE') {\n                client.emit('messageReactionRemove', reaction, reactionUser);\n            }\n        }\n    });\n});\n\nclient.on('messageReactionAdd', async function(reaction, user) {\n    if (!user.bot) {\n        const reactionData = globalVars(\"reactionRoleInf\");\n        const reactionGuild = reaction.message.guild;\n        const reactionMessage = reaction.message;\n        if (reactionData.hasOwnProperty(reactionMessage.id)) {\n            var emojiName = reaction.emoji.name;\n            var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n            if (roleInData.length != 0) {\n                var guilduser = await reactionGuild.fetchMember(user);\n                var roleData = roleInData[0][1];\n                var reactionRole = await reactionGuild.roles.get(roleData);\n                if (!guilduser.roles.has(roleData)) {\n                    guilduser.addRole(reactionRole);\n\n                    if (dmUserAfter){guilduser.send(messageSentAdd.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n                }\n            }\n        }\n    }\n\n});\n\nclient.on('messageReactionRemove', async function(reaction, user) {\n    const reactionData = globalVars(\"reactionRoleInf\");\n    const reactionGuild = reaction.message.guild;\n    const reactionMessage = reaction.message;\n    if (reactionData.hasOwnProperty(reactionMessage.id)) {\n        var emojiName = reaction.emoji.name;\n        var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n        if (roleInData.length != 0) {\n            var guilduser = await reactionGuild.fetchMember(user);\n            var roleData = roleInData[0][1];\n            var reactionRole = await reactionGuild.roles.get(roleData);\n\n            if (guilduser.roles.has(roleData)) {\n                guilduser.removeRole(reactionRole);\n                if (dmUserAfter){guilduser.send(messageSentRemove.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n            }\n        }\n    }\n});","storage":"0","varName":"","name":"Run Script"}]},{"name":"powitanie","temp":"member","event-type":"6","_id":"KRINDEX","actions":[{"info":"0","find":"726786782024433766","storage":"2","varName":"welcome-channel","name":"Find Channel"},{"server":"0","varName":"","info":"36","storage":"1","varName2":"member-count","name":"Store Server Info"},{"member":"2","varName":"member","info":"16","storage":"1","varName2":"avatarurl","name":"Store Member Info"},{"member":"2","varName":"member","info":"3","storage":"1","varName2":"member-displayname","name":"Store Member Info"},{"url":"resources/welcome-image.png","storage":"1","varName":"welcome","name":"Create Image"},{"storage":"1","varName":"welcome","width":"750","height":"250","name":"Resize Image"},{"url":"${tempVars(\"avatarurl\")}","storage":"1","varName":"avatar-image","name":"Create Image"},{"storage":"1","varName":"avatar-image","width":"200","height":"200","name":"Resize Image"},{"storage":"1","varName":"welcome","storage2":"1","varName2":"avatar-image","x":"10","y":"25","mask":"0","name":"Draw Image on Image"},{"storage":"1","varName":"welcome","x":"250","y":"100","font":"fonts/open-sans.fnt","width":"","text":"Witaj ${tempVars(\"member-displayname\")},","name":"Draw Text on Image"},{"storage":"1","varName":"welcome","x":"250","y":"135","font":"fonts/open-sans.fnt","width":"","text":"Jestes naszym ${tempVars(\"member-count\")} uzytkownikiem!","name":"Draw Text on Image"},{"storage":"1","varName":"welcome","channel":"6","varName2":"welcome-channel","message":"","name":"Send Image"}]},{"name":"NewEvent","temp":"","event-type":"0","_id":"tCCSH","actions":[]}]